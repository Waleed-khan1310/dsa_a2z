OOP help us in:-
=> Define our own datatype.
=> Generality to specificity.

OOPs:-
1.Class.
2.Object.
3.Inheritance.
4.Encapsulation.
5.Polymorphism.
6.Abstraction.

1.Class:-
        Class has data, property, attributes(which typically means 
        variable) and behaviour, method(it is basically function).

2.Object:-
    Everything in python is an object.

    An object consists of:-
    State: 
        It is represented by the attributes of an object. It 
        also reflects the properties of an object.
    Behavior: 
        It is represented by the methods of an object. It also 
        reflects the response of an object to other objects.
    Identity: 
        It gives a unique name to an object and enables one 
        object to interact with other objects.

=>Python self:-
    Class methods must have an extra first parameter in the 
    method definition. We do not give a value for this parameter 
    when we call the method.
    If we have a method that takes no arguments, then we still 
    have to have one argument

=>Python __init__ method:-
    It is run as soon as an object of a class is instantiated. The 
    method is useful to do any initialization you want to do with your 
    object.

3.Inheritance:-
    Inheritance is the capability of one class to derive or inherit 
    the properties from another class. The class that derives 
    properties is called the derived class or child class and the 
    class from which the properties are being derived is called the 
    base class or parent class.

4.Polymorphism:-
    Polymorphism simply means having many forms. For example, we need 
    to determine if the given species of birds fly or not, using 
    polymorphism we can do this using a single function.

5.Encapsulation:-
    It describes the idea of wrapping data and the methods that work 
    on data within one unit. This puts restrictions on accessing 
    variables and methods directly and can prevent the accidental 
    modification of data. To prevent accidental change, an object’s 
    variable can only be changed by an object’s method. Those types of 
    variables are known as private variables.